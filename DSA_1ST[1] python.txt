PROGRAM : 01      ROLL NO.: 22104      NAME: Prafulla Bharate     BATCH: 'A'  

#Hashing
size=10
hashtable=[]
hashtable1=[]
for i in range(size):
    hashtable.append(0)
    hashtable1.append(0)

def hash_v(num):
  index = num%size
  while(hashtable[index]!=0):
    index+=1
  hashtable[index]=num
def quadratic_v(num):
  index1=num%size
  if(hashtable1[index1]==0):
     hashtable1[index1]=num
  else:
       for k in range(size):
         t=(hashtable1[index1]+k*k)%size
         if(hashtable1[t]==0):
           hashtable1[t]=num
         break;
def find(num,hash_table):
   index2=num%size
   if(hash_table[index2]==num):
      print("Found",num)
   elif(hash_table[index2]!=num):
      while(hash_table[index2]!=0):
        index2+=1
      if(hash_table[index2]==num):
         print("Found",num)
      else:
         print("Not found",num)
   else:
     print("Invalid syntax")

def main():
  while True:
   print("1.Linear probing")
   print("2.Quadratic probing")
   print("3.Find element")
   print("4.Exit")
   cd=int(input("Enter choice:"))
   if cd==1:
    n=int(input("Enter total elements: "))
    for j in range(n):
     h=int(input("Enter phone numbers: "))
     hash_v(h)
    print("Hashtable using linear probing is : ",hashtable)
   elif cd==2:
    m=int(input("Enter total elements "))
    for j in range(m):
     q=int(input("Enter phone numbers "))
     quadratic_v(q)
    print("Hashtable using quadratic probing is : ",hashtable1)
   elif cd==3:
     h=int(input("Enter number to be found "))
     find(h,hashtable)
   elif cd==4:
     print("End of Program")
   else:
     print("Enter a valid choice")
main()

OUTPUTS :

1.Linear probing
2.Quadratic probing
3.Find element
4.Exit
Enter choice:1
Enter total elements: 5
Enter phone numbers: 3424567889
Enter phone numbers: 9823237578
Enter phone numbers: 82749827297
Enter phone numbers: 75624872763
Enter phone numbers: 23468847582
Hashtable using linear probing is :  [0, 0, 23468847582, 75624872763, 0, 0, 0, 82749827297, 9823237578, 3424567889]
1.Linear probing
2.Quadratic probing
3.Find element
4.Exit
Enter choice:3
Enter number to be found  98232375789823237578
Found 9823237578
1.Linear probing
2.Quadratic probing
3.Find element
4.Exit
Enter choice:4
End of Program1.Linear probing
2.Quadratic probing
3.Find element
4.Exit
Enter choice:1
Enter total elements: 5
Enter phone numbers: 3424567889
Enter phone numbers: 9823237578
Enter phone numbers: 82749827297
Enter phone numbers: 75624872763
Enter phone numbers: 23468847582
Hashtable using linear probing is :  [0, 0, 23468847582, 75624872763, 0, 0, 0, 82749827297, 9823237578, 3424567889]
1.Linear probing
2.Quadratic probing
3.Find element
4.Exit
Enter choice:3
Enter number to be found  98232375789823237578
Found 9823237578
1.Linear probing
2.Quadratic probing
3.Find element
4.Exit
Enter choice:4
End of Program
